/* tslint:disable */
/* eslint-disable */
/**
 * Cloudflare API
 * Interact with Cloudflare's products and services via the Cloudflare API.  Using the Cloudflare API requires authentication so that Cloudflare knows who is making requests and what permissions you have. Create an API token to grant access to the API to perform actions.  To create an API token, from the Cloudflare dashboard, go to My Profile > API Tokens and select Create Token. For more information on how to create and troubleshoot API tokens, refer to our [API fundamentals](https://developers.cloudflare.com/fundamentals/api/).  Totally new to Cloudflare? [Start here](https://developers.cloudflare.com/fundamentals/get-started/).
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { C4f8RoOSBandwidthSsl } from './c4f8-ro-osbandwidth-ssl';
import { C4f8RoOSBandwidthSslProtocols } from './c4f8-ro-osbandwidth-ssl-protocols';
/**
 * Breakdown of totals for bandwidth in the form of bytes.
 * @export
 * @interface C4f8RoOSBandwidth
 */
export interface C4f8RoOSBandwidth {
    /**
     * The total number of bytes served within the time frame.
     * @type {number}
     * @memberof C4f8RoOSBandwidth
     */
    all?: number;
    /**
     * The number of bytes that were cached (and served) by Cloudflare.
     * @type {number}
     * @memberof C4f8RoOSBandwidth
     */
    cached?: number;
    /**
     * A variable list of key/value pairs where the key represents the type of content served, and the value is the number in bytes served.
     * @type {any}
     * @memberof C4f8RoOSBandwidth
     */
    contentType?: any;
    /**
     * A variable list of key/value pairs where the key is a two-digit country code and the value is the number of bytes served to that country.
     * @type {any}
     * @memberof C4f8RoOSBandwidth
     */
    country?: any;
    /**
     * 
     * @type {C4f8RoOSBandwidthSsl}
     * @memberof C4f8RoOSBandwidth
     */
    ssl?: C4f8RoOSBandwidthSsl;
    /**
     * 
     * @type {C4f8RoOSBandwidthSslProtocols}
     * @memberof C4f8RoOSBandwidth
     */
    sslProtocols?: C4f8RoOSBandwidthSslProtocols;
    /**
     * The number of bytes that were fetched and served from the origin server.
     * @type {number}
     * @memberof C4f8RoOSBandwidth
     */
    uncached?: number;
}
